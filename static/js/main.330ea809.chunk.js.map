{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.330ea809.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n        Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions:state.transactions.filter(transaction => transaction.id !== action.payload) \r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions:[action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React , {createContext, useReducer} from 'react';\r\nimport AppReducer from  './AppReducer';\r\n\r\n//Initial state\r\nconst initialState = {\r\n    transactions:[]\r\n}\r\n\r\n//Create context  apne dusre components ko global state access ho sake iske liye ek provider\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n   const [state, dispatch] = useReducer(AppReducer,initialState);\r\n   //Actions\r\n \r\n   function deleteTransaction(id) {\r\n       dispatch({\r\n           type: 'DELETE_TRANSACTION',\r\n           payload: id\r\n       });\r\n   }\r\n\r\n   function addTransaction(transaction) {\r\n    dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: transaction\r\n    });\r\n}\r\n\r\n\r\n   return (<GlobalContext.Provider  value = {{\r\n       transactions: state.transactions,\r\n       deleteTransaction,\r\n       addTransaction\r\n   }}>\r\n    {children}\r\n    </GlobalContext.Provider>)\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\nconst {transactions} = useContext(GlobalContext);\r\nconst amounts = transactions.map(transaction => transaction.amount);\r\nconst total = amounts.reduce((acc,item) => (acc += item),0).toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>Your Balance :</h4>\r\n            <h1>Rs:{total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\n\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n\r\nconst {transactions} = useContext(GlobalContext);\r\nconst amounts = transactions.map(transaction => transaction.amount);\r\n\r\nconst income = amounts \r\n.filter(item => item > 0)\r\n.reduce((acc,item) => (acc+= item),0)\r\n.toFixed(2);\r\n\r\nconst expense = (\r\n    amounts.filter(item => item<0).reduce((acc,item) => (acc += item),0)\r\n    \r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div>\r\n            <div className =\"inc-exp-container\">\r\n               <div>\r\n                   <h4>Income</h4>\r\n                   <p  className =\"money plus\">{income}</p>\r\n               </div>\r\n\r\n               <div>\r\n                  <h4>Expense</h4>\r\n                  <p  className = \"money minus\">{expense}</p>\r\n               </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\n\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className = {transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text}<span>->{sign}Rs{Math.abs(transaction.amount)}</span>\r\n            <button onClick = {() => deleteTransaction(transaction.id)}\r\n           \r\n            className = \"delete-btn\">x</button>\r\n          </li>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport {Transaction} from './Transaction';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const TransactionList = () => {\r\n\r\nconst {transactions} = useContext(GlobalContext);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n            {transactions.map(transaction => (<Transaction key = {transaction.id} transaction = \r\n                {transaction} />))}\r\n            \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState,useContext} from 'react';\r\n\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const {addTransaction} = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {   \r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random()*1000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n     addTransaction(newTransaction);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>Add new transaction</h3>\r\n        <form onSubmit = {onSubmit}>\r\n           <div className=\"form-control\">\r\n             <label htmlFor=\"text\">Text</label>\r\n              <input type=\"text\" value= {text} onChange = {(e) => setText(e.target.value)} placeholder = \"Enter text...\" />\r\n           </div>\r\n           <div className = \"form-control\">\r\n               <label htmlFor=\"amount\"\r\n                  >Amount<br/>\r\n                  (negative-expense,positive-income)\r\n               </label>\r\n              <input type = \"number\" value = {amount} onChange = {(e) => setAmount(e.target.value) }\r\n              placeholder = \"Enter Amount...\" />\r\n            </div>\r\n            <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport {Header} from './components/Header';\nimport {Balance} from './components/Balance';\nimport {IncomeExpenses} from './components/IncomeExpenses';\nimport {TransactionList}  from './components/TransactionList';\nimport {AddTransaction} from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className =\"container\">\n      <Balance />\n      <IncomeExpenses />\n      <TransactionList />\n      <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}